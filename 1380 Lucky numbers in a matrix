class Solution {
public:
    int row, col;

    vector<int> solve(vector<vector<int>>& matrix) {
        int rowmin[row], colmax[col];

        memset(rowmin, 0x3f3f3f3f, sizeof(int) * row);
        memset(colmax, 0, sizeof(int) * col);

        for(int i = 0; i < row; i++) {
            
            for(int j = 0; j < col; j++) {
                rowmin[i] = min(rowmin[i], matrix[i][j]);
                colmax[j] = max(colmax[j], matrix[i][j]);
            }
        }

        vector<int> ans;
        for(int i = 0; i < row; i++) {

            for(int j = 0; j < col; j++) {
                
                if( matrix[i][j] == rowmin[i] && matrix[i][j] == colmax[j] ) ans.emplace_back(matrix[i][j]);
            }
        }

        return ans;
    }

    vector<int> luckyNumbers (vector<vector<int>>& matrix) {
        row = matrix.size(), col = matrix[0].size();
        return solve(matrix);
    }
};
