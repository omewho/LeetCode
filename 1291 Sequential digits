class Solution {
public:
    vector<int> solveone(int low, int high) {
        vector<int> ans;
        int size = to_string(low).length();

        for(int first = 1; first <= 9 - size + 1; first++) {
            int num = first;
            for(int i = num + 1; i <= 9; i++) {
                num = num * 10 + i;
                if(num < low) continue;

                if(num <= high) ans.emplace_back(num);

                else break;
            }
        }
        sort(ans.begin(), ans.end());

        return ans;
    }

    vector<int> solvetwo(int low, int high) {
        vector<int> ans;
        string numstr = "123456789";

        int mi = to_string(low).length(), ma = to_string(high).length();

        while(mi <= ma) {
            for(int i = 0; i < 10 - mi; i++) {
                int curr = stoi(numstr.substr(i, mi));
                if(curr < low) continue;
                if(curr <= high) ans.emplace_back(curr);
                else break;
            }
            mi++;
        }
        return ans;
    }
    vector<int> sequentialDigits(int low, int high) {
        //return solveone(low, high);
        return solvetwo(low, high);
    }
};
