class Solution {
public:
    int solve(vector<string>& arr) {
        vector<int> masks = {0};
        int ans = 0;
        for(string a: arr) {
            int curr_mask = 0;
            for(char ch: a) {
                ch -= 'a';
                if( (curr_mask >> ch) & 1 ) {
                    curr_mask = 0;
                    break;
                }
                curr_mask |= (1 << ch);
            }
            
            if(!curr_mask) continue;

            int n = masks.size();

            for(int i = 0; i < n; i++) {
                if( (curr_mask & masks[i]) == 0) {
                    masks.emplace_back(curr_mask | masks[i]);
                    ans = max(ans, __builtin_popcount(curr_mask | masks[i]));
                }
            }
        }
        return ans;
    }

    int maxLength(vector<string>& arr) {
        return solve(arr);
    }
};
