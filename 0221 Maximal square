class Solution {
public:
    int solvedp(vector<vector<char>>& matrix) {
        int maxSize = 0, row = matrix.size(), col = matrix[0].size();
        vector<vector<int>> dp(row, vector<int> (col, 0));

        for(int i = 0; i < row; i++) {
            for(int j = 0; j < col; j++) {
                if(i == 0 || j == 0) dp[i][j] = matrix[i][j] - '0';
                else if(matrix[i][j] == '1') dp[i][j] = min(dp[i - 1][j], min(dp[i - 1][j - 1], dp[i][j - 1])) + 1;
                maxSize = max(maxSize, dp[i][j]);
            }
        }

        return maxSize * maxSize;
    }

    int maximalSquare(vector<vector<char>>& matrix) {
        return solvedp(matrix);
    }
};
