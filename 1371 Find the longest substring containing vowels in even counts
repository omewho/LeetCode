class Solution {
public:
    int solve(string s) {

        int ans = 0, n = s.length(), mask = 0;

        vector<int> mask_1sti(1 << 5, -2);
        mask_1sti[0] = -1;

        for(int i = 0; i < n; i++) {
            char ch = s[i];
            if(ch == 'a') mask ^= (1 << 0);
            else if(ch == 'e') mask ^= (1 << 1);
            else if(ch == 'i') mask ^= (1 << 2);
            else if(ch == 'o') mask ^= (1 << 3);
            else if(ch == 'u') mask ^= (1 << 4);

            if(mask_1sti[mask] != -2) ans = max(ans, i - mask_1sti[mask]);
            else mask_1sti[mask] = i;
        }
        return ans;
    }

    int findTheLongestSubstring(string s) {
        return solve(s);
    }
};
