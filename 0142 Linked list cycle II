/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *solveslowfast(ListNode *head) {
        ListNode* slow = head, * fast = head;

        while(fast) {
            slow = slow->next;

            if(fast->next == NULL) return NULL;

            fast = fast->next->next;

            if(fast == slow) {
                ListNode* hdr = head;
                while(hdr != slow) {
                    hdr = hdr->next;
                    slow = slow->next;
                }
                return hdr;
            }
        }

        return NULL;
    }

    ListNode *detectCycle(ListNode *head) {
        return solveslowfast(head);
    }
};
