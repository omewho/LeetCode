/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* root, int maxval, int minval, int& ans) {
        if(!root) return;

        int curr = max(abs(root->val - maxval), abs(root->val - minval));
        ans = max(ans, curr);

        maxval = max(root->val, maxval);
        minval = min(root->val, minval);

        dfs(root->left, maxval, minval, ans);
        dfs(root->right, maxval, minval, ans);
    }

    int solve(TreeNode* root) {
        int ans = 0;
        dfs(root, root->val, root->val, ans);
        return ans;
    }

    int maxAncestorDiff(TreeNode* root) {
        return solve(root);
    }
};
