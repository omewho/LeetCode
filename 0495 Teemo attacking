class Solution {
public:
    int solveone(vector<int>& timeSeries, int duration) {
        int ans = 0, end, n = timeSeries.size();
        
        for(int i = 0; i < n; i++) {
            int ts = timeSeries[i];
            if(i == 0) {
                end = ts + duration;
                //printf("end = %d\n", end);
                continue;
            }
            else {
                if(ts >= end) {
                    ans += end - timeSeries[i - 1];
                    //printf("ans = %d\n")
                    
                }
                else ans += ts - timeSeries[i - 1];
                end = ts + duration;
            }

        }

        return ans + duration;
    }

    int solvetwo(vector<int>& timeSeries, int duration) {
        int ans = 0, n = timeSeries.size();
        
        for(int i = 0; i < n - 1; i++) {
            ans += min(timeSeries[i + 1] - timeSeries[i], duration);
        }

        return ans + duration;
    }

    int findPoisonedDuration(vector<int>& timeSeries, int duration) {
        //return solveone(timeSeries, duration);
        return solvetwo(timeSeries, duration);
    }
};
